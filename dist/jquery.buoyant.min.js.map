{"version":3,"sources":["jquery.buoyant.js"],"names":["$","fn","buoyant","options","settings","extend","containerClass","parentClass","elementClass","imgSrc","width","height","backgroundColor","fps","numberOfItems","minRadius","maxRadius","minSpeed","maxSpeed","collisionEfficiency","gravity","trails","colliding","ths","this","parent","innerHeight","balls","pairs","elements","addClass","each","Ball","x","y","r","vx","vy","ele","w","h","document","createElement","src","classList","add","style","marginLeft","marginTop","left","top","push","append","step","frame","getMomentum","console","log","halt","update","ball","Math","abs","distance","ball1","ball2","sqrt","isColliding","a","b","i","random","floor","length","j","window","onresize","setInterval","theta","atan","ravx","cos","sin","ravy","rbvx","rbvy","ravx2","m","ravy2","rbvx2","rbvy2","css","setTimeout","jQuery"],"mappings":"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","file":"jquery.buoyant.min.js","sourcesContent":["/*\r\n* Plugin by Codonist.com\r\n* */\r\n\r\n(function ($) {\r\n    $.fn.buoyant = function (options) {\r\n\r\n        // This is the easiest way to have default options.\r\n        var settings = $.extend({\r\n            // These are the defaults.\r\n            containerClass: \"buoyant-container\",\r\n            parentClass: 'buoyant-parent',\r\n            elementClass: '',\r\n            imgSrc: '',\r\n            width: 50,\r\n            height: -1,\r\n            backgroundColor: \"black\",\r\n            fps: 60,\r\n            numberOfItems: 4,\r\n            minRadius: 10,\r\n            maxRadius: 40,\r\n            minSpeed: 20,\r\n            maxSpeed: 70,\r\n            collisionEfficiency: 1,\r\n            gravity: 0,\r\n            trails: false,\r\n            colliding: false\r\n        }, options);\r\n\r\n\r\n        var ths = this;\r\n        var width = ths.width();\r\n        var height = ths.parent().innerHeight();\r\n        var balls = [];\r\n        var pairs = [];\r\n        var frame = 0;\r\n        var elements = [];\r\n\r\n        ths.parent().addClass(settings.parentClass);\r\n        this.each(function () {\r\n            $(this).addClass('buoyant-container');\r\n            $(this).addClass(settings.containerClass);\r\n        });\r\n\r\n        var Ball = function (x, y, r, vx, vy) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.r = r;\r\n            this.w = r * 2;\r\n            this.h = r * 2;\r\n            this.vx = vx;\r\n            this.vy = vy;\r\n            var ele;\r\n            if (settings.imgSrc) {\r\n                ele = document.createElement(\"img\");\r\n            } else {\r\n                ele = document.createElement(\"span\");\r\n            }\r\n            if (settings.imgSrc) {\r\n                ele.src = settings.imgSrc;\r\n            }\r\n            if (settings.elementClass) {\r\n                ele.classList.add(settings.elementClass);\r\n            }\r\n\r\n            ele.style.height = this.h + 'px';\r\n            ele.style.width = this.w + 'px';\r\n            ele.style.marginLeft = '-' + this.r + 'px';\r\n            ele.style.marginTop = '-' + this.r + 'px';\r\n            ele.style.left = this.x + 'px';\r\n            ele.style.top = this.y + 'px';\r\n            elements.push(ele);\r\n            ths.append(ele);\r\n\r\n            this.step = function (frame) {\r\n                this.x += (this.vx / settings.fps) * frame;\r\n                this.y += (this.vy / settings.fps) * frame\r\n            };\r\n\r\n            this.getMomentum = function () {\r\n                console.log(1);\r\n                return 1\r\n            };\r\n\r\n            this.halt = function () {\r\n                this.vx = 0;\r\n                this.vy = 0\r\n            };\r\n\r\n            this.update = update(this);\r\n            balls.push(this);\r\n        };\r\n\r\n        function update(ball) {\r\n            ball.x += ball.vx / settings.fps;\r\n            ball.y += ball.vy / settings.fps;\r\n\r\n            ball.vy += settings.gravity;\r\n\r\n            if (ball.x + ball.vx / settings.fps + ball.r > width) {\r\n                ball.vx = Math.abs(ball.vx) * -1;\r\n                ball.vx = ball.vx * settings.collisionEfficiency\r\n            } else if (ball.x + ball.vx / settings.fps - ball.r < 0) {\r\n                ball.vx = Math.abs(ball.vx);\r\n                ball.vx = ball.vx * settings.collisionEfficiency\r\n            }\r\n            if (ball.y + ball.vy / settings.fps + ball.r > height) {\r\n                ball.vy = Math.abs(ball.vy) * -1;\r\n                ball.vy = ball.vy * settings.collisionEfficiency\r\n            } else if (ball.y + ball.vy / settings.fps - ball.r < 0) {\r\n                ball.vy = Math.abs(ball.vy);\r\n                ball.vy = ball.vy * settings.collisionEfficiency\r\n            }\r\n        }\r\n\r\n        function distance(ball1, ball2) {\r\n            return Math.sqrt((ball1.x - ball2.x) * (ball1.x - ball2.x) + (ball1.y - ball2.y) * (ball1.y - ball2.y))\r\n        }\r\n\r\n        function isColliding(a, b) {\r\n            if (Math.abs(a.x - b.x) <= a.r + b.r && Math.abs(a.y - b.y) <= a.r + b.r) {\r\n                if (distance(a, b) <= a.r + b.r) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < settings.numberOfItems; i++) {\r\n            new Ball(Math.random() * width, Math.random() * height, settings.minRadius + Math.random() * (settings.maxRadius - settings.minRadius), (settings.minSpeed + Math.random() * (settings.maxSpeed - settings.minSpeed)) * [1, -1][Math.floor(Math.random() + .5)], (settings.minSpeed + Math.random() * (settings.maxSpeed - settings.minSpeed)) * [1, -1][Math.floor(Math.random() + .5)])\r\n        }\r\n\r\n        //create a list of pairs\r\n        for (i = 0; i < balls.length - 1; i++) {\r\n            for (var j = i + 1; j < balls.length; j++) {\r\n                pairs.push([balls[i], balls[j]])\r\n            }\r\n        }\r\n\r\n        //check all the pairs to see if any balls are colliding\r\n        for (i in pairs) {\r\n            var a = pairs[i][0];\r\n            var b = pairs[i][1];\r\n\r\n            if (isColliding(a,b)){\r\n                //do something\r\n            }\r\n        }\r\n\r\n        window.onresize = function () {\r\n            width = ths.width();\r\n            height = ths.parent().innerHeight();\r\n        };\r\n\r\n\r\n        function main_loop() {\r\n            if (settings.trails === false) {\r\n//            ctx.clearRect(0, 0, rectArea.width, rectArea.height)\r\n            }\r\n\r\n            if(settings.colliding){\r\n                for (i in pairs) {\r\n                    var a = pairs[i][0];\r\n                    var b = pairs[i][1];\r\n\r\n                    if (isColliding(a, b)) {\r\n\r\n                        var theta = Math.atan((b.y - a.y) / (b.x - a.x));\r\n                        var error = (a.r + b.r) / (distance(a, b));\r\n                        var ex = Math.cos(theta) * error;\r\n                        var ey = Math.sin(theta);\r\n\r\n                        //rotate colisions to make math easier\r\n                        var ravx = Math.cos(theta) * (a.vx) + Math.sin(theta) * (a.vy);\r\n                        var ravy = Math.cos(theta) * (a.vy) - Math.sin(theta) * (a.vx);\r\n                        var rbvx = Math.cos(theta) * (b.vx) + Math.sin(theta) * (b.vy);\r\n                        var rbvy = Math.cos(theta) * (b.vy) - Math.sin(theta) * (b.vx);\r\n\r\n                        //maybe this is right? although it still gives same result\r\n                        var ravx2 = ((a.m - b.m) * ravx + 2 * b.m * rbvx) / (a.m + b.m);\r\n                        var ravy2 = ravy;\r\n                        var rbvx2 = (2 * a.m * ravx - (a.m - b.m) * rbvx) / (a.m + b.m);\r\n                        var rbvy2 = rbvy;\r\n\r\n                        //rotates back and sets velocities\r\n                        a.vx = Math.cos(theta) * ravx2 - Math.sin(theta) * ravy2;\r\n                        a.vy = Math.cos(theta) * ravy2 + Math.sin(theta) * ravx2;\r\n                        b.vx = Math.cos(theta) * rbvx2 - Math.sin(theta) * rbvy2;\r\n                        b.vy = Math.cos(theta) * rbvy2 + Math.sin(theta) * rbvx2;\r\n\r\n                        a.vx = a.vx * settings.collisionEfficiency;\r\n                        a.vy = a.vy * settings.collisionEfficiency;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //draw balls\r\n            for (i in balls) {\r\n                elements[i].style.left = balls[i].x + 'px';\r\n                elements[i].style.top = balls[i].y + 'px';\r\n                update(balls[i]);\r\n            }\r\n        }\r\n\r\n        setInterval(main_loop, 1000 / settings.fps);\r\n\r\n        return this.each(function () {\r\n            $(this).css('height', height + 'px');\r\n            setTimeout(function () {\r\n                width = ths.width();\r\n                height = ths.parent().innerHeight();\r\n            }, 100);\r\n        });\r\n    };\r\n\r\n}(jQuery));"]}