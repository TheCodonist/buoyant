{"version":3,"sources":["jquery.buoyant.js"],"names":["$","fn","buoyant","options","settings","extend","containerClass","parentClass","elementClass","imgSrc","width","height","backgroundColor","fps","numberOfItems","minRadius","maxRadius","minSpeed","maxSpeed","collisionEfficiency","gravity","trails","colliding","ths","this","parent","innerHeight","balls","pairs","elements","addClass","each","Ball","x","y","r","vx","vy","ele","m","Math","PI","w","h","document","createElement","src","classList","add","style","marginLeft","marginTop","left","top","push","append","step","frame","getMomentum","console","log","halt","update","ball","abs","distance","ball1","ball2","sqrt","isColliding","a","b","i","random","floor","length","j","window","onresize","setInterval","theta","atan","ravx","cos","sin","ravy","rbvx","rbvy","ravx2","ravy2","rbvx2","rbvy2","css","setTimeout","jQuery"],"mappings":"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","file":"jquery.buoyant.min.js","sourcesContent":["/*\r\n* Plugin by Codonist.com\r\n* */\r\n\r\n(function ($) {\r\n    $.fn.buoyant = function (options) {\r\n\r\n        // This is the easiest way to have default options.\r\n        var settings = $.extend({\r\n            // These are the defaults.\r\n            containerClass: \"buoyant-container\",\r\n            parentClass: 'buoyant-parent',\r\n            elementClass: '',\r\n            imgSrc: '',\r\n            width: 50,\r\n            height: -1,\r\n            backgroundColor: \"black\",\r\n            fps: 60,\r\n            numberOfItems: 4,\r\n            minRadius: 10,\r\n            maxRadius: 40,\r\n            minSpeed: 20,\r\n            maxSpeed: 70,\r\n            collisionEfficiency: 1,\r\n            gravity: 0,\r\n            trails: false,\r\n            colliding: false\r\n        }, options);\r\n\r\n\r\n        var ths = this;\r\n        var width = ths.width();\r\n        var height = ths.parent().innerHeight();\r\n        var balls = [];\r\n        var pairs = [];\r\n        var frame = 0;\r\n        var elements = [];\r\n\r\n        ths.parent().addClass(settings.parentClass);\r\n        this.each(function () {\r\n            $(this).addClass('buoyant-container');\r\n            $(this).addClass(settings.containerClass);\r\n        });\r\n\r\n        var Ball = function (x, y, r, vx, vy) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.r = r;\r\n            this.m = Math.PI * r * r;\r\n            this.w = r * 2;\r\n            this.h = r * 2;\r\n            this.vx = vx;\r\n            this.vy = vy;\r\n            var ele;\r\n            if (settings.imgSrc) {\r\n                ele = document.createElement(\"img\");\r\n            } else {\r\n                ele = document.createElement(\"span\");\r\n            }\r\n            if (settings.imgSrc) {\r\n                ele.src = settings.imgSrc;\r\n            }\r\n            if (settings.elementClass) {\r\n                ele.classList.add(settings.elementClass);\r\n            }\r\n\r\n            ele.style.height = this.h + 'px';\r\n            ele.style.width = this.w + 'px';\r\n            ele.style.marginLeft = '-' + this.r + 'px';\r\n            ele.style.marginTop = '-' + this.r + 'px';\r\n            ele.style.left = this.x + 'px';\r\n            ele.style.top = this.y + 'px';\r\n            elements.push(ele);\r\n            ths.append(ele);\r\n\r\n            this.step = function (frame) {\r\n                this.x += (this.vx / settings.fps) * frame;\r\n                this.y += (this.vy / settings.fps) * frame\r\n            };\r\n\r\n            this.getMomentum = function () {\r\n                console.log(1);\r\n                return 1\r\n            };\r\n\r\n            this.halt = function () {\r\n                this.vx = 0;\r\n                this.vy = 0\r\n            };\r\n\r\n            this.update = update(this);\r\n            balls.push(this);\r\n        };\r\n\r\n        function update(ball) {\r\n            ball.x += ball.vx / settings.fps;\r\n            ball.y += ball.vy / settings.fps;\r\n\r\n            ball.vy += settings.gravity;\r\n\r\n            if (ball.x + ball.vx / settings.fps + ball.r > width) {\r\n                ball.vx = Math.abs(ball.vx) * -1;\r\n                ball.vx = ball.vx * settings.collisionEfficiency\r\n            } else if (ball.x + ball.vx / settings.fps - ball.r < 0) {\r\n                ball.vx = Math.abs(ball.vx);\r\n                ball.vx = ball.vx * settings.collisionEfficiency\r\n            }\r\n            if (ball.y + ball.vy / settings.fps + ball.r > height) {\r\n                ball.vy = Math.abs(ball.vy) * -1;\r\n                ball.vy = ball.vy * settings.collisionEfficiency\r\n            } else if (ball.y + ball.vy / settings.fps - ball.r < 0) {\r\n                ball.vy = Math.abs(ball.vy);\r\n                ball.vy = ball.vy * settings.collisionEfficiency\r\n            }\r\n        }\r\n\r\n        function distance(ball1, ball2) {\r\n            return Math.sqrt((ball1.x - ball2.x) * (ball1.x - ball2.x) + (ball1.y - ball2.y) * (ball1.y - ball2.y))\r\n        }\r\n\r\n        function isColliding(a, b) {\r\n            if (Math.abs(a.x - b.x) <= a.r + b.r && Math.abs(a.y - b.y) <= a.r + b.r) {\r\n                if (distance(a, b) <= a.r + b.r) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < settings.numberOfItems; i++) {\r\n            new Ball(Math.random() * width, Math.random() * height, settings.minRadius + Math.random() * (settings.maxRadius - settings.minRadius), (settings.minSpeed + Math.random() * (settings.maxSpeed - settings.minSpeed)) * [1, -1][Math.floor(Math.random() + .5)], (settings.minSpeed + Math.random() * (settings.maxSpeed - settings.minSpeed)) * [1, -1][Math.floor(Math.random() + .5)])\r\n        }\r\n\r\n        //create a list of pairs\r\n        for (i = 0; i < balls.length - 1; i++) {\r\n            for (var j = i + 1; j < balls.length; j++) {\r\n                pairs.push([balls[i], balls[j]])\r\n            }\r\n        }\r\n\r\n        //check all the pairs to see if any balls are colliding\r\n        for (i in pairs) {\r\n            var a = pairs[i][0];\r\n            var b = pairs[i][1];\r\n\r\n            if (isColliding(a,b)){\r\n                //do something\r\n            }\r\n        }\r\n\r\n        window.onresize = function () {\r\n            width = ths.width();\r\n            height = ths.parent().innerHeight();\r\n        };\r\n\r\n\r\n        function main_loop() {\r\n            if (settings.trails === false) {\r\n//            ctx.clearRect(0, 0, rectArea.width, rectArea.height)\r\n            }\r\n\r\n            if(settings.colliding){\r\n                for (i in pairs) {\r\n                    var a = pairs[i][0];\r\n                    var b = pairs[i][1];\r\n\r\n                    if (isColliding(a, b)) {\r\n\r\n                        var theta = Math.atan((b.y - a.y) / (b.x - a.x));\r\n                        var error = (a.r + b.r) / (distance(a, b));\r\n                        var ex = Math.cos(theta) * error;\r\n                        var ey = Math.sin(theta);\r\n\r\n                        //rotate colisions to make math easier\r\n                        var ravx = Math.cos(theta) * (a.vx) + Math.sin(theta) * (a.vy);\r\n                        var ravy = Math.cos(theta) * (a.vy) - Math.sin(theta) * (a.vx);\r\n                        var rbvx = Math.cos(theta) * (b.vx) + Math.sin(theta) * (b.vy);\r\n                        var rbvy = Math.cos(theta) * (b.vy) - Math.sin(theta) * (b.vx);\r\n\r\n                        //maybe this is right? although it still gives same result\r\n                        var ravx2 = ((a.m - b.m) * ravx + 2 * b.m * rbvx) / (a.m + b.m);\r\n                        var ravy2 = ravy;\r\n                        var rbvx2 = (2 * a.m * ravx - (a.m - b.m) * rbvx) / (a.m + b.m);\r\n                        var rbvy2 = rbvy;\r\n\r\n                        //rotates back and sets velocities\r\n                        a.vx = Math.cos(theta) * ravx2 - Math.sin(theta) * ravy2;\r\n                        a.vy = Math.cos(theta) * ravy2 + Math.sin(theta) * ravx2;\r\n                        b.vx = Math.cos(theta) * rbvx2 - Math.sin(theta) * rbvy2;\r\n                        b.vy = Math.cos(theta) * rbvy2 + Math.sin(theta) * rbvx2;\r\n\r\n                        a.vx = a.vx * settings.collisionEfficiency;\r\n                        a.vy = a.vy * settings.collisionEfficiency;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            //draw balls\r\n            for (i in balls) {\r\n                elements[i].style.left = balls[i].x + 'px';\r\n                elements[i].style.top = balls[i].y + 'px';\r\n                update(balls[i]);\r\n            }\r\n        }\r\n\r\n        setInterval(main_loop, 1000 / settings.fps);\r\n\r\n        return this.each(function () {\r\n            $(this).css('height', height + 'px');\r\n            setTimeout(function () {\r\n                width = ths.width();\r\n                height = ths.parent().innerHeight();\r\n            }, 100);\r\n        });\r\n    };\r\n\r\n}(jQuery));"]}